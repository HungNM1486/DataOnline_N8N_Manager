#!/bin/bash

# DataOnline N8N Manager
# Version: 0.1.0-dev
# Author: DataOnline Team

set -euo pipefail

# Colors
readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly BLUE='\033[0;34m'
readonly CYAN='\033[0;36m'
readonly WHITE='\033[1;37m'
readonly NC='\033[0m'

# Config
readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
readonly VERSION="0.1.0-dev"

# Logging functions
log_info() {
    echo -e "${CYAN}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Main menu
show_main_menu() {
    clear
    echo -e "${CYAN}‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ${NC}"
    echo -e "${CYAN}‚îÇ                DataOnline N8N Manager                     ‚îÇ${NC}"
    echo -e "${CYAN}‚îÇ                Development Version                       ‚îÇ${NC}"
    echo -e "${CYAN}‚îÇ                   https://DataOnline.vn                    ‚îÇ${NC}"
    echo -e "${CYAN}‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ${NC}"
    echo ""
    echo -e "${WHITE}CH·ª®C NƒÇNG CH√çNH:${NC}"
    echo -e "1Ô∏è‚É£  üöÄ C√†i ƒë·∫∑t N8N"
    echo -e "2Ô∏è‚É£  üåê Qu·∫£n l√Ω t√™n mi·ªÅn & SSL"
    echo -e "3Ô∏è‚É£  ‚öôÔ∏è  Qu·∫£n l√Ω d·ªãch v·ª•"
    echo -e "4Ô∏è‚É£  ÔøΩÔøΩ Sao l∆∞u & kh√¥i ph·ª•c"
    echo -e "5Ô∏è‚É£  üîÑ C·∫≠p nh·∫≠t phi√™n b·∫£n"
    echo ""
    echo -e "${WHITE}H·ªñ TR·ª¢:${NC}"
    echo -e "AÔ∏è‚É£  üìã Th√¥ng tin h·ªá th·ªëng"
    echo -e "BÔ∏è‚É£  üîß C·∫•u h√¨nh"
    echo -e "CÔ∏è‚É£  üìö Tr·ª£ gi√∫p & t√†i li·ªáu"
    echo ""
    echo -e "0Ô∏è‚É£  ‚ùå Tho√°t"
    echo ""
    echo -e "${CYAN}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ${NC}"
}

# Handle menu selection
handle_selection() {
    local choice="$1"

    case "$choice" in
    1)
        log_info "Ch·ª©c nƒÉng c√†i ƒë·∫∑t N8N - Coming soon..."
        ;;
    2)
        log_info "Ch·ª©c nƒÉng qu·∫£n l√Ω domain - Coming soon..."
        ;;
    3)
        log_info "Ch·ª©c nƒÉng qu·∫£n l√Ω d·ªãch v·ª• - Coming soon..."
        ;;
    4)
        log_info "Ch·ª©c nƒÉng backup & restore - Coming soon..."
        ;;
    5)
        log_info "Ch·ª©c nƒÉng update - Coming soon..."
        ;;
    A | a)
        show_system_info
        ;;
    B | b)
        log_info "Ch·ª©c nƒÉng c·∫•u h√¨nh - Coming soon..."
        ;;
    C | c)
        show_help
        ;;
    0)
        log_success "C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng DataOnline N8N Manager!"
        exit 0
        ;;
    *)
        log_error "L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá: $choice"
        ;;
    esac
}

# System information
show_system_info() {
    echo ""
    log_info "TH√îNG TIN H·ªÜ TH·ªêNG:"
    echo "OS: $(lsb_release -d | cut -f2)"
    echo "Kernel: $(uname -r)"
    echo "CPU: $(nproc) cores"
    echo "RAM: $(free -h | awk '/^Mem:/ {print $2}')"
    echo "Disk: $(df -h / | awk 'NR==2 {print $4 " available"}')"

    if command -v docker >/dev/null 2>&1; then
        echo "Docker: $(docker --version | cut -d' ' -f3 | cut -d',' -f1)"
    else
        echo "Docker: Not installed"
    fi

    if command -v node >/dev/null 2>&1; then
        echo "Node.js: $(node --version)"
    else
        echo "Node.js: Not installed"
    fi
    echo ""
}

# Help information
show_help() {
    echo ""
    log_info "TR·ª¢ GI√öP:"
    echo "‚Ä¢ Website: https://DataOnline.vn"
    echo "‚Ä¢ Documentation: https://docs.DataOnline.vn/n8n-manager"
    echo "‚Ä¢ Support: support@DataOnline.vn"
    echo "‚Ä¢ GitHub: https://github.com/DataOnline-vn/n8n-manager"
    echo ""
    echo "Phi√™n b·∫£n: $VERSION"
    echo "M√¥i tr∆∞·ªùng: Development"
    echo ""
}

# Main loop
main() {
    while true; do
        show_main_menu
        read -p "Nh·∫≠p l·ª±a ch·ªçn [1-5, A-C, 0]: " choice
        echo ""
        handle_selection "$choice"
        echo ""
        read -p "Nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c..."
    done
}

# Run main function
main "$@"
