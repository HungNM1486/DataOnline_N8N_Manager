#!/bin/bash

# Certificate History Checker
# Ki·ªÉm tra l·ªãch s·ª≠ certificates ƒë√£ l·∫•y

set -euo pipefail

DOMAIN="${1:-n8n-store.xyz}"

echo "üîç Ki·ªÉm tra certificates cho domain: $DOMAIN"
echo "================================================="

# 1. Check local certificates
echo ""
echo "üìÅ 1. Certificates local:"
if [[ -d "/etc/letsencrypt/live" ]]; then
    ls -la /etc/letsencrypt/live/ | grep "$DOMAIN" || echo "Kh√¥ng c√≥ certificates local"
    
    if [[ -d "/etc/letsencrypt/live/$DOMAIN" ]]; then
        echo ""
        echo "üìÑ Certificate details:"
        openssl x509 -in "/etc/letsencrypt/live/$DOMAIN/cert.pem" -text -noout | grep -E "Not Before|Not After|Serial Number" || true
    fi
else
    echo "Th∆∞ m·ª•c letsencrypt ch∆∞a t·ªìn t·∫°i"
fi

# 2. Check certbot logs
echo ""
echo "üìù 2. Certbot logs (10 d√≤ng cu·ªëi):"
if [[ -f "/var/log/letsencrypt/letsencrypt.log" ]]; then
    tail -10 /var/log/letsencrypt/letsencrypt.log | grep -E "$DOMAIN|rate|limit|issued" || echo "Kh√¥ng c√≥ logs li√™n quan"
else
    echo "Kh√¥ng c√≥ certbot logs"
fi

# 3. Check certificate transparency logs
echo ""
echo "üåê 3. Certificate transparency (online check):"
if command -v curl >/dev/null 2>&1; then
    echo "ƒêang ki·ªÉm tra crt.sh..."
    
    # Query crt.sh API
    CERT_DATA=$(curl -s "https://crt.sh/?q=$DOMAIN&output=json" || echo "[]")
    
    if [[ "$CERT_DATA" != "[]" && -n "$CERT_DATA" ]]; then
        echo "$CERT_DATA" | jq -r '.[] | select(.issuer_name | contains("Let")) | "\(.logged_at[:10]) - \(.issuer_name)"' 2>/dev/null | head -10 || {
            # Fallback n·∫øu kh√¥ng c√≥ jq
            echo "$CERT_DATA" | grep -o '"logged_at":"[^"]*' | cut -d'"' -f4 | head -5
        }
    else
        echo "Kh√¥ng t√¨m th·∫•y certificates public"
    fi
else
    echo "C·∫ßn curl ƒë·ªÉ check online"
fi

# 4. Check rate limit status
echo ""
echo "‚ö†Ô∏è  4. Rate limit analysis:"

# Count recent certificates from logs
if [[ -f "/var/log/letsencrypt/letsencrypt.log" ]]; then
    RECENT_CERTS=$(grep -c "Congratulations" /var/log/letsencrypt/letsencrypt.log 2>/dev/null || echo "0")
    echo "Certificates issued (theo logs): $RECENT_CERTS"
    
    # Check for rate limit messages
    RATE_LIMIT_MSG=$(grep -i "too many certificates" /var/log/letsencrypt/letsencrypt.log | tail -1 || echo "")
    if [[ -n "$RATE_LIMIT_MSG" ]]; then
        echo "üö® Rate limit message:"
        echo "$RATE_LIMIT_MSG"
    fi
fi

# 5. Recommendations
echo ""
echo "üí° 5. Khuy·∫øn ngh·ªã:"
echo "- Rate limit: 5 certs/tu·∫ßn cho exact domain"
echo "- Subdomain ri√™ng bi·ªát kh√¥ng b·ªã limit: app.$DOMAIN"
echo "- Staging environment unlimited: certbot --staging"
echo "- Self-signed t·∫°m th·ªùi: openssl req -x509 ..."

echo ""
echo "üîß Quick solutions:"
echo "1) Ch·ªù 7 ng√†y reset rate limit"
echo "2) D√πng subdomain: certbot -d app.$DOMAIN"
echo "3) Test staging: certbot --staging -d $DOMAIN"